# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Add concurrency to cancel in-progress runs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_and_preview:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    timeout-minutes: 15 # Add timeout to prevent hanging builds
    outputs:
      preview-url: ${{ steps.firebase-deploy.outputs.details_url }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1 # Shallow clone for faster checkout

      # Cache Firebase tools to speed up deployment
      - name: Cache Firebase tools
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase
          key: ${{ runner.os }}-firebase-tools-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-tools-

      # Optimized Node.js setup with built-in caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      # Cache node_modules separately for better performance
      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Install dependencies - skip if cache hit
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline --network-timeout 300000
        env:
          YARN_CACHE_FOLDER: ~/.cache/yarn

      # Build step with environment variable for CI optimization
      - name: Build
        run: |
          # Speed up build by optimizing for CI
          VITE_BUILD_START=$(date +%s)
          yarn run build --sourcemap false
          VITE_BUILD_END=$(date +%s)
          echo "Build took $((VITE_BUILD_END-VITE_BUILD_START)) seconds"
        env:
          CI: true
          NODE_ENV: production
          # Optimize JS minification
          VITE_DISABLE_ESLINT: true
          # Limit memory usage
          NODE_OPTIONS: '--max-old-space-size=4096'

      - name: Deploy to Firebase
        id: firebase-deploy
        uses: FirebaseExtended/action-hosting-deploy@v0.9.0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FE_FIREBASE_SERVICE_ACCOUNT_ARBOREAL_VISION_339901 }}'
          projectId: arboreal-vision-339901
          target: app
          channelId: 'pr-${{ github.event.pull_request.number }}'
          expires: 7d
          firebaseToolsVersion: '12.4.0'

  trigger-visual-test:
    needs: build_and_preview
    runs-on: ubuntu-latest
    if: needs.build_and_preview.outputs.preview-url != ''
    continue-on-error: true  # Don't fail the PR if visual tests fail
    steps:
      # Option 1: Trigger YoFix workflow via dispatch (RECOMMENDED)
      - name: Trigger Yofix Visual Test
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'yofix.yml',
              ref: '${{ github.head_ref }}',
              inputs: {
                'preview-url': '${{ needs.build_and_preview.outputs.preview-url }}',
                'pr-number': '${{ github.event.pull_request.number }}'
              }
            });

      # Option 2: Use YoFix directly (ALTERNATIVE)
      # Uncomment this section and comment out Option 1 if you prefer direct usage
      # - name: Run YoFix Visual Test
      #   uses: yofix/yofix@v1.0.13
      #   with:
      #     # Target URL
      #     preview-url: ${{ needs.build_and_preview.outputs.preview-url }}
      #     
      #     # Required: Authentication tokens
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     claude-api-key: ${{ secrets.FE_CLAUDE_API_KEY }}
      #     
      #     # Required: Firebase storage configuration
      #     firebase-credentials: ${{ secrets.FE_FIREBASE_SERVICE_ACCOUNT_KEY_BASE64 }}
      #     storage-bucket: ${{ vars.FE_VAR_FIREBASE_STORAGE_BUCKET }}
      #     
      #     # Authentication configuration (USE SECRETS!)
      #     auth-email: ${{ secrets.FE_AUTH_EMAIL }}
      #     auth-password: ${{ secrets.FE_AUTH_PASSWORD }}
      #     
      #     # MCP configuration (optional)
      #     mcp-provider: "built-in"  # or "playwright-official"
      #     
      #     # Optional: Custom configuration
      #     viewports: "1920x1080,768x1024,375x667"
      #     test-timeout: "30s"
      #     max-routes: "10"
      #     
      #     # Optional: Specific routes to test (comma-separated)
      #     # test-routes: "/base,/dashboard,/profile"

      - name: Check Visual Test Results
        if: failure()
        run: |
          echo "⚠️ Visual tests failed. Check the PR comment for details."
          echo "This won't block your PR, but please review the visual changes."
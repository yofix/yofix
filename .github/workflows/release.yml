name: Release GitHub Action

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-optional

      # Skip tests for now - no test files
      # - name: Run tests
      #   run: npm test

      - name: Build action
        run: npm run build
        
      - name: Commit dist changes
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add dist/
          git commit -m "Build dist for release ${{ github.event.inputs.version || github.ref_name }}" || echo "No changes to commit"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          release_name: Release ${{ github.event.inputs.version || github.ref_name }}
          body: |
            ## YoFix ${{ github.event.inputs.version || github.ref_name }}
            
            AI-powered visual testing for web applications.
            
            ### What's Changed
            - See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details
            
            ### Installation
            ```yaml
            - uses: ${{ github.repository }}@${{ github.event.inputs.version || github.ref_name }}
            ```
          draft: false
          prerelease: false

      # Update major version tag (e.g., v1 -> v1.2.3)
      - name: Update major version tag
        if: startsWith(github.ref_name, 'v')
        run: |
          VERSION=${{ github.event.inputs.version || github.ref_name }}
          MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
          
          git config user.name github-actions
          git config user.email github-actions@github.com
          
          # Force update the major version tag
          git tag -fa $MAJOR_VERSION -m "Update $MAJOR_VERSION to $VERSION"
          git push origin $MAJOR_VERSION --force